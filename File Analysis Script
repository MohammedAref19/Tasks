!/bin/bash

# Function to display usage information
function display_usage {
    echo "Usage: $0 -d <DIRECTORY>"
    echo "Options:"
    echo "  -d, --directory   Specify the directory to analyze"
    exit 1
}

# Initialize variables
DIRECTORY=""

# Process command line arguments
while [[ $# -gt 0 ]]; do
    case "$1" in
        -d|--directory)
            DIRECTORY="$2"
            shift 2
            ;;
        *)
            display_usage
            ;;
    esac
done

# Check if required arguments are provided
if [ -z "$DIRECTORY" ]; then
    display_usage
fi

# Function to analyze files using various tools
function analyze_files {
    echo "Analyzing files in directory: $DIRECTORY"
    
    for file in "$DIRECTORY"/*; do
        echo "File: $file"

        # Use ExifTool to extract metadata
        echo "------ ExifTool Metadata ------"
        exiftool "$file"

        # Use MediaInfo to analyze media files
        if [[ $(file "$file" | grep -i "media") ]]; then
            echo "------ MediaInfo Analysis ------"
            mediainfo "$file"
        fi

        # Use Strings to extract printable characters from binary files
        if [[ $(file "$file" | grep -i "data") ]]; then
            echo "------ Strings Analysis ------"
            strings "$file"
fi

        # Use Tcpdump to analyze network capture files
        if [[ $(file "$file" | grep -i "pcap") ]]; then
            echo "------ Tcpdump Analysis ------"
            tcpdump -n -r "$file"
        fi

        # Check for steganography using Steghide
        if [[ $(file "$file" | grep -i "image") ]]; then
            echo "------ Steghide Analysis ------"
            steghide info "$file"
        fi

        echo "-----------------------------"
    done
}
 
# Main script

# Check if the specified directory exists
if [ ! -d "$DIRECTORY" ]; then
    echo "Error: Directory not found - $DIRECTORY"
    exit 1
fi

# Analyze files in the specified directory
analyze_files
